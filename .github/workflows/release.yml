name: 'Release of the project'

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.${{ github.run_number }}
          release_name: Release 0.0.${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: sudo apt-get update && sudo apt-get install -y python3
      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          file: "helloworld-0.0.${{github.run_number}}-Linux.deb"
          target: "./helloworld-0.0.${{github.run_number}}-Linux.deb"
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: sudo apt install -y ./helloworld-0.0.${{github.run_number}}-Linux.deb
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: ls -la
      - run: python3 ./test.py ${{github.run_number}}
